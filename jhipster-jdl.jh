
entity UserFeed {
    userName String,
    message String,
    currentType Alert,
    isValid Boolean,
    latitude String,
    longitude String,
	score Integer,
    createdTime Instant
  }

enum Alert {
    RED_ALERT, ORANGE_ALERT, GREEN_ALERT 
}


entity Action {
userName String,
takenAction String,
type ActionType,
requestApproval Boolean,
createdTime Instant
}

enum ActionType {
     COMMENT, REQUEST_TO_CLOSE
}


entity Reaction
{
userName String,
type TypeOfReaction
} 

enum TypeOfReaction {
    FAKE, VALID, SOLVED, PARTIALLY_SOLVED, NOT_SOLVED 
}

entity UserRegistration
{
firstName String,
lastName String,
phone Long,
email String,
password String,
bloodGroup String,
userImage Blob,
points Long,
dateOfBith Instant,
createdTime Instant
} 

entity Friends
{
//friendName String,
//contactMail String,
//contactNumber Long,
immediateFriend Boolean

}

entity File
{
attachments Blob
}

relationship OneToMany{
UserFeed{actions} to Action{user},
UserFeed{scopeOfFeed} to Reaction{feed},
Action{scopeOfActions} to Reaction{action},
UserRegistration{message} to UserFeed{user},
UserFeed{file} to File
}
 


relationship ManyToMany
{
UserFeed{helpedFriends} to Friends,
UserRegistration{friends} to Friends{users}
}

dto * with mapstruct
service all with serviceImpl
paginate * with pagination

